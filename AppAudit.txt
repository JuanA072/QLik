// Set up locations of Sense Repository and a backup location
// Used in the backup script field
let vSrcFolder = 'F:\QlikSenseRepository\Apps\';
let vDestFolder = 'F:\AppBackup' & date(today(), 'YYYYMMDD') & '\';


// Connect to the REST connection
LIB CONNECT TO 'monitor_apps_REST_app';

// Load raw JSON Data
RawRESTData:
SQL SELECT 
    "id" AS "id_u1",
    "createdDate",
    "modifiedDate",
    "modifiedByUserName",
    "name" AS "name_u1",
    "publishTime",
    "published",
    "description",
    "fileSize",
    "lastReloadTime",
    "thumbnail",
    "savedInProductVersion",
    "availabilityStatus",
    "schemaPath",
    "__KEY_root",
    (SELECT 
        "userId",
        "userDirectory",
        "name",
        "__FK_owner"
    FROM "owner" FK "__FK_owner"),
    (SELECT 
        "name" AS "name_u0",
        "__FK_stream"
    FROM "stream" FK "__FK_stream")
FROM JSON (wrap on) "root" PK "__KEY_root";


// Create mapping tables from parts of the REST result
Map_Owner:
MAPPING LOAD
    [__FK_owner],
    [name]
RESIDENT RawRESTData
WHERE NOT IsNull([__FK_owner]);

Map_OwnerLogin:
MAPPING LOAD
    [__FK_owner],
    [userDirectory] & '\' & [userId] as Login
RESIDENT RawRESTData
WHERE NOT IsNull([__FK_owner]);

Map_Stream:
MAPPING LOAD
    [__FK_stream],
    [name_u0]
RESIDENT RawRESTData
WHERE NOT IsNull([__FK_stream]);


// Create parameterised variables for repeated tasks
set vTime      = Date(if(Date#(left($1, 10), 'YYYY-MM-DD') < 0, null(),
                      Date#(left(replace($1, 'T', ' '), 19), 'YYYY-MM-DD hh:mm:ss')), 'DD MMM YYYY hh:mm:ss') as [$2 Date Time];
set vDP        = Date(DayStart([$1 Date Time]), 'DD MMM YYYY') as [$1 Date],
                      Date(MonthStart([$1 Date Time]), 'MMM-YYYY') as [$1 Month],
                Month([$1 Date Time]) as [$1 Month Name],
                Year([$1 Date Time]) as [$1 Year],
                WeekDay([$1 Date Time]) as [$1 Day],
                today() - DayStart([$1 Date Time]) as [Days Since $1];
set vNS       = if($1 = '', 'Not Specified', $1);
                
Applications:
LOAD
    1 as ApplicationCount,
    *,
    RangeMin([Days Since Created], [Days Since Modified], [Days Since Published], [Days Since Last Reload]) as [Days Since Last Touch],
    // Export this column to create a script to backup your apps from the Repository
    'copy $(vSrcFolder)' & GUID & ' "$(vDestFolder)' & Stream & ' -- ' & Application & '.qvf"' as [App Backup Script]
    ;
LOAD
    *,
    $(vDP(Created)),
    $(vDP(Modified)),
    $(vDP(Published)),
    $(vDP(Last Reload))
    ;
LOAD
    id_u1 as GUID,
    $(vTime(createdDate, Created)),
    $(vTime(modifiedDate, Modified)),
    $(vTime(lastReloadTime, Last Reload)),
    $(vTime(publishTime, Published)),
    [modifiedByUserName]                                    as [Modified By],
    [name_u1]                                               as Application,
    [published]                                             as [Is Published],
    $(vNS(description))                                     as [Application Description],
    fileSize / 1000000                                      as [File Size],
    $(vNS(thumbnail))                                       as Thumbnail,
    [savedInProductVersion]                                 as [Product Version],
    [availabilityStatus]                                    as Availability,
    ApplyMap('Map_Owner', [__KEY_root], 'Not Known')        as Owner,
    ApplyMap('Map_OwnerLogin', [__KEY_root], 'Not Known')   as [Owner Login],
    ApplyMap('Map_Stream', [__KEY_root], 'None')            as Stream  
RESIDENT RawRESTData
WHERE NOT IsNull([__KEY_root]);

DROP TABLE RawRESTData;


